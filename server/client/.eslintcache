[{"D:\\Project\\react\\social_app_merng\\server\\client\\src\\index.js":"1","D:\\Project\\react\\social_app_merng\\server\\client\\src\\App.js":"2","D:\\Project\\react\\social_app_merng\\server\\client\\src\\ApolloProvider.js":"3","D:\\Project\\react\\social_app_merng\\server\\client\\src\\pages\\Home.js":"4","D:\\Project\\react\\social_app_merng\\server\\client\\src\\pages\\Login.js":"5","D:\\Project\\react\\social_app_merng\\server\\client\\src\\pages\\Register.js":"6","D:\\Project\\react\\social_app_merng\\server\\client\\src\\components\\MenuBar.js":"7","D:\\Project\\react\\social_app_merng\\server\\client\\src\\components\\PostCard.js":"8"},{"size":232,"mtime":1610605853918,"results":"9","hashOfConfig":"10"},{"size":692,"mtime":1610604953882,"results":"11","hashOfConfig":"10"},{"size":572,"mtime":1610511291501,"results":"12","hashOfConfig":"10"},{"size":1331,"mtime":1610632355163,"results":"13","hashOfConfig":"10"},{"size":150,"mtime":1610527247699,"results":"14","hashOfConfig":"10"},{"size":3699,"mtime":1610632876571,"results":"15","hashOfConfig":"10"},{"size":1427,"mtime":1610632850281,"results":"16","hashOfConfig":"10"},{"size":1749,"mtime":1610548144706,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1e0byqb",{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"D:\\Project\\react\\social_app_merng\\server\\client\\src\\index.js",[],["40","41"],"D:\\Project\\react\\social_app_merng\\server\\client\\src\\App.js",["42","43"],"import React from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, Switch, useHistory } from \"react-router-dom\";\nimport 'semantic-ui-css/semantic.min.css';\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport MenuBar from './components/MenuBar';\n\nfunction App() {\n  return (\n      <BrowserRouter>\n          <div className=\"ui container\">\n              <MenuBar />\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/register\" component={Register} />\n          </div>\n      </BrowserRouter>\n  );\n}\n\nexport default App;\n","D:\\Project\\react\\social_app_merng\\server\\client\\src\\ApolloProvider.js",[],"D:\\Project\\react\\social_app_merng\\server\\client\\src\\pages\\Home.js",["44"],"import React from 'react'\r\nimport {useQuery} from '@apollo/react-hooks'\r\nimport gql from 'graphql-tag';\r\nimport { Grid } from 'semantic-ui-react'\r\nimport PostCard from '../components/PostCard';\r\n\r\nconst Home = () => {\r\n    const {loading, err, data} = useQuery(FETCH_POSTS_QUERY);\r\n    \r\n    return (\r\n        <Grid columns={3}>\r\n            <Grid.Row className=\"page-title\">\r\n                <h1>Recent Posts</h1>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n                {loading ? (\r\n                    <h1>Loading post...</h1>\r\n                ) : (\r\n                    data.getPosts && data.getPosts.map(post => (\r\n                        <Grid.Column key={post.id} style={{marginBottom: 20}}>\r\n                            <PostCard post={post} />\r\n                        </Grid.Column>\r\n                    ))\r\n                )}\r\n            </Grid.Row>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nconst FETCH_POSTS_QUERY = gql`\r\n    {\r\n        getPosts {\r\n            id\r\n            body\r\n            createdAt\r\n            username\r\n            likeCount\r\n            likes {\r\n                username\r\n            }\r\n            commentCount\r\n            comments {\r\n                id\r\n                username\r\n                createdAt\r\n                body\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport default Home\r\n","D:\\Project\\react\\social_app_merng\\server\\client\\src\\pages\\Login.js",[],"D:\\Project\\react\\social_app_merng\\server\\client\\src\\pages\\Register.js",["45"],"import { useMutation } from '@apollo/react-hooks';\r\nimport gql from 'graphql-tag';\r\nimport React, { useState } from 'react'\r\nimport { Button, Form } from 'semantic-ui-react'\r\nconst Register = (props) => {\r\n    const [errors, setErrors] = useState({});\r\n    const [values, setValues] = useState({\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n    })\r\n\r\n    const onChange = (e) => {\r\n        setValues({\r\n            ...values,\r\n            [e.target.name]:e.target.value\r\n        })\r\n    };\r\n\r\n    const [addUser, {loading,error}] = useMutation(REGISTER_USER, {\r\n        update(cache,result) {\r\n            console.log(result);\r\n            props.history.push('/');\r\n        },\r\n        onError(err) {\r\n            console.log(err.graphQLErrors);\r\n            console.log(err.graphQLErrors[0].extensions.exception.errors);\r\n            setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n        },\r\n        variables: values\r\n    });\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        addUser();\r\n    }\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n            <Form onSubmit={onSubmit} noValidate className={loading ? \"loading\" : ''}>\r\n                <h1>회원가입</h1>\r\n                <Form.Input\r\n                    label=\"Username\"\r\n                    placeholder=\"Username...\"\r\n                    name=\"username\"\r\n                    type=\"text\"\r\n                    value={values.username}\r\n                    error={errors.username ? true : false}\r\n                    onChange={onChange}\r\n                />\r\n                <Form.Input\r\n                    label=\"Email\"\r\n                    placeholder=\"Email...\"\r\n                    name=\"email\"\r\n                    type=\"text\"\r\n                    value={values.email}\r\n                    error={errors.email ? true : false}\r\n                    onChange={onChange}\r\n                />\r\n                <Form.Input\r\n                    label=\"Password\"\r\n                    placeholder=\"Password...\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    value={values.password}\r\n                    error={errors.password ? true : false}\r\n                    onChange={onChange}\r\n                />   \r\n                <Form.Input\r\n                    label=\"Confirm Password\"\r\n                    placeholder=\"Confirm Password...\"\r\n                    name=\"confirmPassword\"\r\n                    type=\"password\"\r\n                    value={values.confirmPassword}\r\n                    error={errors.confirmPassword ? true : false}\r\n                    onChange={onChange}\r\n                />\r\n                <Button type='submit' primary>Submit</Button>\r\n            </Form>\r\n            {Object.keys(errors).length > 0 && (\r\n                <div className=\"ui error message\">\r\n                    <ul className=\"list\">\r\n                        {Object.values(errors).map((value) => (\r\n                            <li key={value}>{value}</li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst REGISTER_USER = gql`\r\n    mutation register(\r\n        $username: String!\r\n        $email: String!\r\n        $password: String!\r\n        $confirmPassword: String!\r\n    ) {\r\n        register(registerInput: {\r\n            username: $username\r\n            email: $email\r\n            password: $password\r\n            confirmPassword: $confirmPassword\r\n        }) {\r\n            id\r\n            email\r\n            username\r\n            createdAt\r\n            token\r\n        }\r\n    }\r\n`\r\n\r\nexport default Register\r\n","D:\\Project\\react\\social_app_merng\\server\\client\\src\\components\\MenuBar.js",[],"D:\\Project\\react\\social_app_merng\\server\\client\\src\\components\\PostCard.js",["46"],"import React from 'react'\r\nimport { Button, Card, Icon, Image, Label } from 'semantic-ui-react'\r\nimport moment from 'moment';\r\nimport { Link } from 'react-router-dom';\r\nconst PostCard = ({post : {body, createdAt, id, username, likeCount, commentCount, likes}}) => {\r\n\r\n    function likePost() {\r\n\r\n    }\r\n\r\n    function commentOnPost() {\r\n\r\n    }\r\n\r\n    return (\r\n        <Card fluid>\r\n            <Card.Content>\r\n                <Image\r\n                    floated=\"right\"\r\n                    size=\"mini\"\r\n                    src=\"https://react.semantic-ui.com/images/avatar/large/jenny.jpg\"\r\n                />\r\n                <Card.Header>{username}</Card.Header>\r\n                <Card.Meta as={Link} to={`/posts/${id}`}>\r\n                    {moment(createdAt).fromNow(true)}\r\n                </Card.Meta>\r\n                <Card.Description>{body}</Card.Description>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n                <Button as=\"div\" labelPosition=\"right\" onClick={likePost}>\r\n                    <Button color=\"teal\" basic>\r\n                        <Icon name=\"heart\" />\r\n                    </Button>\r\n                    <Label basic color=\"teal\" pointing=\"left\">\r\n                        {likeCount}\r\n                    </Label>\r\n                </Button>\r\n                <Button as=\"div\" labelPosition=\"right\" onClick={likePost}>\r\n                    <Button color=\"blue\" basic>\r\n                        <Icon name=\"comment\" />\r\n                    </Button>\r\n                    <Label basic color=\"blue\" pointing=\"left\">\r\n                        {commentCount}\r\n                    </Label>\r\n                </Button>\r\n            </Card.Content>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default PostCard\r\n",["47","48"],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":3,"column":32,"nodeType":"55","messageId":"56","endLine":3,"endColumn":38},{"ruleId":"53","severity":1,"message":"57","line":3,"column":40,"nodeType":"55","messageId":"56","endLine":3,"endColumn":50},{"ruleId":"53","severity":1,"message":"58","line":8,"column":21,"nodeType":"55","messageId":"56","endLine":8,"endColumn":24},{"ruleId":"53","severity":1,"message":"59","line":21,"column":30,"nodeType":"55","messageId":"56","endLine":21,"endColumn":35},{"ruleId":"53","severity":1,"message":"60","line":11,"column":14,"nodeType":"55","messageId":"56","endLine":11,"endColumn":27},{"ruleId":"49","replacedBy":"61"},{"ruleId":"51","replacedBy":"62"},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","'err' is assigned a value but never used.","'error' is assigned a value but never used.","'commentOnPost' is defined but never used.",["63"],["64"],"no-global-assign","no-unsafe-negation"]