[{"D:\\Project\\react\\social_app_merng\\server\\client\\src\\index.js":"1","D:\\Project\\react\\social_app_merng\\server\\client\\src\\App.js":"2","D:\\Project\\react\\social_app_merng\\server\\client\\src\\ApolloProvider.js":"3","D:\\Project\\react\\social_app_merng\\server\\client\\src\\pages\\Home.js":"4","D:\\Project\\react\\social_app_merng\\server\\client\\src\\pages\\Login.js":"5","D:\\Project\\react\\social_app_merng\\server\\client\\src\\pages\\Register.js":"6","D:\\Project\\react\\social_app_merng\\server\\client\\src\\components\\MenuBar.js":"7","D:\\Project\\react\\social_app_merng\\server\\client\\src\\components\\PostCard.js":"8","D:\\Project\\react\\social_app_merng\\server\\client\\src\\utils\\hooks.js":"9","D:\\Project\\react\\social_app_merng\\server\\client\\src\\context\\auth.js":"10","D:\\Project\\react\\social_app_merng\\server\\client\\src\\utils\\AuthRoute.js":"11","D:\\Project\\react\\social_app_merng\\server\\client\\src\\components\\PostForm.js":"12","D:\\Project\\react\\social_app_merng\\server\\client\\src\\utils\\graphql.js":"13"},{"size":232,"mtime":1610605853918,"results":"14","hashOfConfig":"15"},{"size":1016,"mtime":1610863103736,"results":"16","hashOfConfig":"15"},{"size":953,"mtime":1610948132975,"results":"17","hashOfConfig":"15"},{"size":1700,"mtime":1610963227277,"results":"18","hashOfConfig":"15"},{"size":2883,"mtime":1610867691831,"results":"19","hashOfConfig":"15"},{"size":3824,"mtime":1610783845121,"results":"20","hashOfConfig":"15"},{"size":2209,"mtime":1610786192467,"results":"21","hashOfConfig":"15"},{"size":1749,"mtime":1610548144706,"results":"22","hashOfConfig":"15"},{"size":461,"mtime":1610688867745,"results":"23","hashOfConfig":"15"},{"size":1561,"mtime":1610812039685,"results":"24","hashOfConfig":"15"},{"size":955,"mtime":1610863306246,"results":"25","hashOfConfig":"15"},{"size":2633,"mtime":1610963894579,"results":"26","hashOfConfig":"15"},{"size":444,"mtime":1610869503286,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1e0byqb",{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"D:\\Project\\react\\social_app_merng\\server\\client\\src\\index.js",[],["60","61"],"D:\\Project\\react\\social_app_merng\\server\\client\\src\\App.js",["62","63","64"],"import React, { createContext } from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, Switch, useHistory } from \"react-router-dom\";\nimport 'semantic-ui-css/semantic.min.css';\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport MenuBar from './components/MenuBar';\nimport { AuthProvider } from './context/auth';\nimport AuthRoute from './utils/AuthRoute';\n\nfunction App() {\n    return (\n        // AuthProvider로 감싸줌으로써 Home, Login, Register 모두 context에 접근할 수 있다 \n        <AuthProvider>\n            <BrowserRouter>\n                <div className=\"ui container\">\n                    <MenuBar />\n                    <Route exact path=\"/\" component={Home} />\n                    <AuthRoute exact path=\"/login\" component={Login} />\n                    <AuthRoute exact path=\"/register\" component={Register} />\n                </div>\n            </BrowserRouter>\n        </AuthProvider>\n    );\n}\n\nexport default App;\n","D:\\Project\\react\\social_app_merng\\server\\client\\src\\ApolloProvider.js",[],"D:\\Project\\react\\social_app_merng\\server\\client\\src\\pages\\Home.js",["65"],"D:\\Project\\react\\social_app_merng\\server\\client\\src\\pages\\Login.js",["66"],"import { useMutation } from '@apollo/react-hooks';\r\nimport gql from 'graphql-tag';\r\nimport React, { useContext, useState } from 'react'\r\nimport { Button, Form } from 'semantic-ui-react'\r\nimport { AuthContext } from '../context/auth';\r\nimport { useForm } from '../utils/hooks';\r\n\r\nconst Login = (props) => {\r\n    const contexts = useContext(AuthContext);\r\n    const [errors, setErrors] = useState({});\r\n    const {onChange, onSubmit, values} = useForm(loginUserCallback, {\r\n        username: '',\r\n        password: ''\r\n    });\r\n\r\n    const [loginUser, {loading,error}] = useMutation(LOGIN_USER, {\r\n        update(cache,result) {\r\n            console.log(result);\r\n            props.history.push('/');\r\n            contexts.login(result.data.login);\r\n        },\r\n        onError(err) {\r\n            console.log(err.graphQLErrors);\r\n            console.log(err.graphQLErrors[0].extensions.exception.errors);\r\n            setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n        },\r\n        variables: values\r\n    });\r\n\r\n    // function 은 hoisting에 의해서 최상단으로 끌어올려진다\r\n    function loginUserCallback() {\r\n        loginUser();\r\n    }\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n            <Form onSubmit={onSubmit} noValidate className={loading ? \"loading\" : ''}>\r\n                <h1>로그인</h1>\r\n                <Form.Input\r\n                    label=\"Username\"\r\n                    placeholder=\"Username...\"\r\n                    name=\"username\"\r\n                    type=\"text\"\r\n                    value={values.username}\r\n                    error={errors.username ? true : false}\r\n                    onChange={onChange}\r\n                />\r\n                <Form.Input\r\n                    label=\"Password\"\r\n                    placeholder=\"Password...\"\r\n                    name=\"password\"\r\n                    type=\"text\"\r\n                    value={values.password}\r\n                    error={errors.password ? true : false}\r\n                    onChange={onChange}\r\n                />\r\n                <Button type='submit' primary>Submit</Button>\r\n            </Form>\r\n            {Object.keys(errors).length > 0 && (\r\n                <div className=\"ui error message\">\r\n                    <ul className=\"list\">\r\n                        {Object.values(errors).map((value) => (\r\n                            <li key={value}>{value}</li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst LOGIN_USER = gql`\r\n    mutation login(\r\n        $username: String!\r\n        $password: String!\r\n    ) {\r\n        login(\r\n            username: $username\r\n            password: $password\r\n        ) {\r\n            id\r\n            email\r\n            username\r\n            createdAt\r\n            token\r\n        }\r\n    }\r\n`\r\n\r\nexport default Login;\r\n","D:\\Project\\react\\social_app_merng\\server\\client\\src\\pages\\Register.js",["67"],"import { useMutation } from '@apollo/react-hooks';\r\nimport gql from 'graphql-tag';\r\nimport React, { useContext, useState } from 'react'\r\nimport { Button, Form } from 'semantic-ui-react'\r\nimport { AuthContext } from '../context/auth';\r\nimport { useForm } from '../utils/hooks';\r\n\r\nconst Register = (props) => {\r\n    const contexts = useContext(AuthContext);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const {onChange, onSubmit, values} = useForm(registerUser,{\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n    });\r\n\r\n    const [addUser, {loading,error}] = useMutation(REGISTER_USER, {\r\n        update(cache,result) {\r\n            console.log(result);\r\n            props.history.push('/');\r\n            contexts.login(result.data.login);\r\n        },\r\n        onError(err) {\r\n            console.log(err.graphQLErrors);\r\n            console.log(err.graphQLErrors[0].extensions.exception.errors);\r\n            setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n        },\r\n        variables: values\r\n    });\r\n\r\n    // function 은 hoisting에 의해서 최상단으로 끌어올려진다\r\n    function registerUser() {\r\n        addUser();\r\n    }\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n            <Form onSubmit={onSubmit} noValidate className={loading ? \"loading\" : ''}>\r\n                <h1>회원가입</h1>\r\n                <Form.Input\r\n                    label=\"Username\"\r\n                    placeholder=\"Username...\"\r\n                    name=\"username\"\r\n                    type=\"text\"\r\n                    value={values.username}\r\n                    error={errors.username ? true : false}\r\n                    onChange={onChange}\r\n                />\r\n                <Form.Input\r\n                    label=\"Email\"\r\n                    placeholder=\"Email...\"\r\n                    name=\"email\"\r\n                    type=\"text\"\r\n                    value={values.email}\r\n                    error={errors.email ? true : false}\r\n                    onChange={onChange}\r\n                />\r\n                <Form.Input\r\n                    label=\"Password\"\r\n                    placeholder=\"Password...\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    value={values.password}\r\n                    error={errors.password ? true : false}\r\n                    onChange={onChange}\r\n                />   \r\n                <Form.Input\r\n                    label=\"Confirm Password\"\r\n                    placeholder=\"Confirm Password...\"\r\n                    name=\"confirmPassword\"\r\n                    type=\"password\"\r\n                    value={values.confirmPassword}\r\n                    error={errors.confirmPassword ? true : false}\r\n                    onChange={onChange}\r\n                />\r\n                <Button type='submit' primary>Submit</Button>\r\n            </Form>\r\n            {Object.keys(errors).length > 0 && (\r\n                <div className=\"ui error message\">\r\n                    <ul className=\"list\">\r\n                        {Object.values(errors).map((value) => (\r\n                            <li key={value}>{value}</li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst REGISTER_USER = gql`\r\n    mutation register(\r\n        $username: String!\r\n        $email: String!\r\n        $password: String!\r\n        $confirmPassword: String!\r\n    ) {\r\n        register(registerInput: {\r\n            username: $username\r\n            email: $email\r\n            password: $password\r\n            confirmPassword: $confirmPassword\r\n        }) {\r\n            id\r\n            email\r\n            username\r\n            createdAt\r\n            token\r\n        }\r\n    }\r\n`\r\n\r\nexport default Register\r\n","D:\\Project\\react\\social_app_merng\\server\\client\\src\\components\\MenuBar.js",[],"D:\\Project\\react\\social_app_merng\\server\\client\\src\\components\\PostCard.js",["68"],"import React from 'react'\r\nimport { Button, Card, Icon, Image, Label } from 'semantic-ui-react'\r\nimport moment from 'moment';\r\nimport { Link } from 'react-router-dom';\r\nconst PostCard = ({post : {body, createdAt, id, username, likeCount, commentCount, likes}}) => {\r\n\r\n    function likePost() {\r\n\r\n    }\r\n\r\n    function commentOnPost() {\r\n\r\n    }\r\n\r\n    return (\r\n        <Card fluid>\r\n            <Card.Content>\r\n                <Image\r\n                    floated=\"right\"\r\n                    size=\"mini\"\r\n                    src=\"https://react.semantic-ui.com/images/avatar/large/jenny.jpg\"\r\n                />\r\n                <Card.Header>{username}</Card.Header>\r\n                <Card.Meta as={Link} to={`/posts/${id}`}>\r\n                    {moment(createdAt).fromNow(true)}\r\n                </Card.Meta>\r\n                <Card.Description>{body}</Card.Description>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n                <Button as=\"div\" labelPosition=\"right\" onClick={likePost}>\r\n                    <Button color=\"teal\" basic>\r\n                        <Icon name=\"heart\" />\r\n                    </Button>\r\n                    <Label basic color=\"teal\" pointing=\"left\">\r\n                        {likeCount}\r\n                    </Label>\r\n                </Button>\r\n                <Button as=\"div\" labelPosition=\"right\" onClick={likePost}>\r\n                    <Button color=\"blue\" basic>\r\n                        <Icon name=\"comment\" />\r\n                    </Button>\r\n                    <Label basic color=\"blue\" pointing=\"left\">\r\n                        {commentCount}\r\n                    </Label>\r\n                </Button>\r\n            </Card.Content>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default PostCard\r\n","D:\\Project\\react\\social_app_merng\\server\\client\\src\\utils\\hooks.js",[],"D:\\Project\\react\\social_app_merng\\server\\client\\src\\context\\auth.js",["69"],"import React, { createContext, useReducer } from 'react'\r\nimport jwtDecode from 'jwt-decode';\r\n\r\nconst initialState = {\r\n    user: null\r\n}\r\n\r\nif(localStorage.getItem('jwtToken')) {\r\n    const decodedToken = jwtDecode(localStorage.getItem('jwtToken'));\r\n    console.log(decodedToken)\r\n    if(decodedToken.exp * 1000 < Date.now()) {\r\n        localStorage.removeItem('jwtToken');\r\n    } else {\r\n        initialState.user = decodedToken;\r\n    }\r\n}\r\n\r\nconst AuthContext = createContext({\r\n    user: null,\r\n    login: (userdata) => {},\r\n    logout: () => {},\r\n});\r\n\r\nconst authReducer = (state, action) => {\r\n    switch(action.type) {\r\n        case 'LOGIN':\r\n            return {\r\n                ...state,\r\n                user: action.payload\r\n            }\r\n        case 'LOGOUT':\r\n            return {\r\n                ... state,\r\n                user: null,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nfunction AuthProvider({children}) {\r\n    console.log(children)\r\n    const [state, dispatch] = useReducer(authReducer,initialState);\r\n\r\n    function login(userdata) {\r\n        localStorage.setItem('jwtToken',userdata.token)\r\n        dispatch({\r\n            type: 'LOGIN',\r\n            payload: userdata\r\n        })\r\n    }\r\n\r\n    function logout() {\r\n        localStorage.clear();\r\n        dispatch({type: 'LOGOUT'})\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ user: state.user, login:login, logout:logout }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport {AuthContext, AuthProvider}","D:\\Project\\react\\social_app_merng\\server\\client\\src\\utils\\AuthRoute.js",[],"D:\\Project\\react\\social_app_merng\\server\\client\\src\\components\\PostForm.js",["70","71"],"D:\\Project\\react\\social_app_merng\\server\\client\\src\\utils\\graphql.js",[],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":1,"column":17,"nodeType":"78","messageId":"79","endLine":1,"endColumn":30},{"ruleId":"76","severity":1,"message":"80","line":3,"column":32,"nodeType":"78","messageId":"79","endLine":3,"endColumn":38},{"ruleId":"76","severity":1,"message":"81","line":3,"column":40,"nodeType":"78","messageId":"79","endLine":3,"endColumn":50},{"ruleId":"76","severity":1,"message":"82","line":11,"column":21,"nodeType":"78","messageId":"79","endLine":11,"endColumn":24},{"ruleId":"76","severity":1,"message":"83","line":16,"column":32,"nodeType":"78","messageId":"79","endLine":16,"endColumn":37},{"ruleId":"76","severity":1,"message":"83","line":19,"column":30,"nodeType":"78","messageId":"79","endLine":19,"endColumn":35},{"ruleId":"76","severity":1,"message":"84","line":11,"column":14,"nodeType":"78","messageId":"79","endLine":11,"endColumn":27},{"ruleId":"85","severity":1,"message":"86","line":33,"column":20,"nodeType":"87","messageId":"88","endLine":33,"endColumn":21,"fix":"89"},{"ruleId":"76","severity":1,"message":"90","line":14,"column":25,"nodeType":"78","messageId":"79","endLine":14,"endColumn":32},{"ruleId":"76","severity":1,"message":"83","line":14,"column":33,"nodeType":"78","messageId":"79","endLine":14,"endColumn":38},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'createContext' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'useHistory' is defined but never used.","'err' is assigned a value but never used.","'error' is assigned a value but never used.","'commentOnPost' is defined but never used.","rest-spread-spacing","Unexpected whitespace after spread property operator.","ExperimentalSpreadProperty","unexpectedWhitespace",{"range":"93","text":"94"},"'loading' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[820,821],""]